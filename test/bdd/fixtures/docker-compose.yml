#
# Copyright SecureKey Technologies Inc. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#
version: '2'

services:

  orb-domain1:
    container_name: orb.domain1.com
    image: ${ORB_FIXTURE_IMAGE}:latest
    restart: always
    environment:
      - DEV_MODE_ENABLED=true
      - ORB_KMS_ENDPOINT=http://orb.kms:7878
      - LOG_LEVEL=DEBUG
      - ORB_VCT_URL=http://orb.vct:8077/maple2020
      - ORB_HOST_URL=0.0.0.0:80
      - ORB_PRIVATE_KEY=9kRTh70Ut0MKPeHY3Gdv/pi8SACx6dFjaEiIHf7JDugPpXBnCHVvRbgdzYbWfCGsXdvh/Zct+AldKG4bExjHXg
      - ORB_KEY_ID=orb1key
      # ORB_EXTERNAL_ENDPOINT is the endpoint that external clients use to invoke services. This endpoint is used
      # to generate IDs of anchor credentials and ActivityPub objects and should be resolvable by external
      # clients. This endpoint does not (typically) target a single node in the cluster but instead, a load
      # balancer servicing multiple nodes.
      - ORB_EXTERNAL_ENDPOINT=http://orb.domain1.com
      - ORB_DISCOVERY_DOMAIN=shared.domain.com
      - DID_NAMESPACE=did:orb
      - ALLOWED_ORIGINS=http://orb.domain1.com/services/orb,http://orb.domain2.com/services/orb,ipns://k51qzi5uqu5dgkmm1afrkmex5mzpu5r774jstpxjmro6mdsaullur27nfxle1q
      # BATCH_WRITER_TIMEOUT is max wait time in-between cutting batches (defined in milliseconds)
      - BATCH_WRITER_TIMEOUT=1000
      - CAS_TYPE=${CAS_TYPE}
      - IPFS_URL=ipfs:5001
      - MQ_URL=amqp://${RABBITMQ_USERNAME}:${RABBITMQ_PASSWORD}@orb.mq.domain1.com:5672/
      # MQ_OP_POOL specifies the number of subscribers that concurrently process messages in the operation queue.
      - MQ_OP_POOL=20
      - CID_VERSION=${CID_VERSION_DOMAIN1}
      - ANCHOR_CREDENTIAL_ISSUER=http://orb.domain1.com
      - ANCHOR_CREDENTIAL_URL=http://orb.domain1.com/vc
      - ANCHOR_CREDENTIAL_SIGNATURE_SUITE=Ed25519Signature2018
      # used in case that orb server signs anchor credential (there is no local witness log)
      - ANCHOR_CREDENTIAL_DOMAIN=http://orb.domain1.com
      - DATABASE_TYPE=couchdb
      - DATABASE_URL=${COUCHDB_USERNAME}:${COUCHDB_PASSWORD}@couchdb.shared.com:5984
      - DATABASE_PREFIX=domain1
      - HTTP_SIGNATURES_ENABLED=true

      # ORB_AUTH_TOKENS_DEF contains the authorization definition for each of the REST endpoints. Format:
      #
      # <path-expr>|<read-token1>&<read-token2>&...>|<write-token1>&<write-token2>&...>,<path-expr> ...
      #
      # Where:
      # - path-expr contains a regular expression for a path. Path expressions are processed in the order they are specified.
      # - read-token defines a token for a read (GET) operation. If not specified then authorization is not performed.
      # - write-token defines a token for a write (POST) operation. If not specified then authorization is not performed.
      #
      # If no definition is included for an endpoint then authorization is NOT performed for that endpoint.
      #
      # Example:
      #
      # ORB_AUTH_TOKENS_DEF=/services/orb/outbox|admin&read|admin,/services/orb/.*|read&admin
      # - The client requires a 'read' or 'admin' token in order to view the outbox's contents
      # - The client requires an 'admin' token in order to post to the outbox
      # - The client requires a 'read' or 'admin' token in order to perform a GET on any endpoint starting with /services/orb/
      - ORB_AUTH_TOKENS_DEF=/services/orb/keys,/services/orb/outbox|admin&read|admin,/services/orb/inbox|admin&read|admin,/services/orb/.*|read&admin,/transactions|read&admin,/sidetree/.*/identifiers|read&admin,/sidetree/.*/operations|read&admin|admin,/cas|read&admin
      # ORB_AUTH_TOKENS specifies the actual values of the tokens defined in ORB_AUTH_TOKENS_DEF.
      - ORB_AUTH_TOKENS=admin=ADMIN_TOKEN,read=READ_TOKEN
    ports:
      - 48326:80
    command: start
    volumes:
      - ./keys/tls:/etc/orb/tls
      - ./testdata/keys/domain1:/etc/orb/activitypub
    depends_on:
      - ipfs
      - orb.kms
      - couchdb.kms.com
      - couchdb.shared.com
      - orb.mq.domain1.com
    networks:
      - orb_net

  orb2-domain1:
    container_name: orb2.domain1.com
    image: ${ORB_FIXTURE_IMAGE}:latest
    restart: always
    environment:
      - DEV_MODE_ENABLED=true
      - ORB_KMS_ENDPOINT=http://orb.kms:7878
      - LOG_LEVEL=DEBUG
      - ORB_VCT_URL=http://orb.vct:8077/maple2020
      - ORB_HOST_URL=0.0.0.0:80
      - ORB_PRIVATE_KEY=9kRTh70Ut0MKPeHY3Gdv/pi8SACx6dFjaEiIHf7JDugPpXBnCHVvRbgdzYbWfCGsXdvh/Zct+AldKG4bExjHXg
      - ORB_KEY_ID=orb1key
      # add delay for starting additional servers within same domain (in seconds)
      - ORB_STARTUP_DELAY=5
      # ORB_EXTERNAL_ENDPOINT is the endpoint that external clients use to invoke services. This endpoint is used
      # to generate IDs of anchor credentials and ActivityPub objects and should be resolvable by external
      # clients. This endpoint does not (typically) target a single node in the cluster but instead, a load
      # balancer servicing multiple nodes.
      - ORB_EXTERNAL_ENDPOINT=http://orb.domain1.com
      - ORB_DISCOVERY_DOMAIN=shared.domain.com
      - DID_NAMESPACE=did:orb
      - ALLOWED_ORIGINS=http://orb.domain1.com/services/orb,http://orb.domain2.com/services/orb,ipns://k51qzi5uqu5dgkmm1afrkmex5mzpu5r774jstpxjmro6mdsaullur27nfxle1q
      # BATCH_WRITER_TIMEOUT is max wait time in-between cutting batches (defined in milliseconds)
      - BATCH_WRITER_TIMEOUT=1000
      - CAS_TYPE=${CAS_TYPE}
      - IPFS_URL=ipfs:5001
      - MQ_URL=amqp://${RABBITMQ_USERNAME}:${RABBITMQ_PASSWORD}@orb.mq.domain1.com:5672/
      # MQ_OP_POOL specifies the number of subscribers that concurrently process messages in the operation queue.
      - MQ_OP_POOL=20
      - CID_VERSION=${CID_VERSION_DOMAIN1}
      - ANCHOR_CREDENTIAL_ISSUER=http://orb2.domain1.com
      - ANCHOR_CREDENTIAL_URL=http://orb2.domain1.com/vc
      - ANCHOR_CREDENTIAL_SIGNATURE_SUITE=Ed25519Signature2018
      # used in case that orb server signs anchor credential (there is no local witness log)
      - ANCHOR_CREDENTIAL_DOMAIN=http://orb.domain1.com
      - DATABASE_TYPE=couchdb
      - DATABASE_URL=${COUCHDB_USERNAME}:${COUCHDB_PASSWORD}@couchdb.shared.com:5984
      - DATABASE_PREFIX=domain1
      - HTTP_SIGNATURES_ENABLED=true

      # ORB_AUTH_TOKENS_DEF contains the authorization definition for each of the REST endpoints. Format:
      #
      # <path-expr>|<read-token1>&<read-token2>&...>|<write-token1>&<write-token2>&...>,<path-expr> ...
      #
      # Where:
      # - path-expr contains a regular expression for a path. Path expressions are processed in the order they are specified.
      # - read-token defines a token for a read (GET) operation. If not specified then authorization is not performed.
      # - write-token defines a token for a write (POST) operation. If not specified then authorization is not performed.
      #
      # If no definition is included for an endpoint then authorization is NOT performed for that endpoint.
      #
      # Example:
      #
      # ORB_AUTH_TOKENS_DEF=/services/orb/outbox|admin&read|admin,/services/orb/.*|read&admin
      # - The client requires a 'read' or 'admin' token in order to view the outbox's contents
      # - The client requires an 'admin' token in order to post to the outbox
      # - The client requires a 'read' or 'admin' token in order to perform a GET on any endpoint starting with /services/orb/
      - ORB_AUTH_TOKENS_DEF=/services/orb/keys,/services/orb/outbox|admin&read|admin,/services/orb/inbox|admin&read|admin,/services/orb/.*|read&admin,/transactions|read&admin,/sidetree/.*/identifiers|read&admin,/sidetree/.*/operations|read&admin|admin,/cas|read&admin
      # ORB_AUTH_TOKENS specifies the actual values of the tokens defined in ORB_AUTH_TOKENS_DEF.
      - ORB_AUTH_TOKENS=admin=ADMIN_TOKEN,read=READ_TOKEN
    ports:
      - 48526:80
    command: start
    volumes:
      - ./keys/tls:/etc/orb/tls
      - ./testdata/keys/domain1:/etc/orb/activitypub
    depends_on:
      - ipfs
      - orb.kms
      - couchdb.kms.com
      - couchdb.shared.com
      - orb-domain1
      - orb.mq.domain1.com
    networks:
      - orb_net

  orb-domain2:
    container_name: orb.domain2.com
    image: ${ORB_FIXTURE_IMAGE}:latest
    restart: always
    environment:
      - DEV_MODE_ENABLED=true
      - ORB_KMS_ENDPOINT=http://orb.kms:7878
      - LOG_LEVEL=DEBUG
      - ORB_HOST_URL=0.0.0.0:80
      - ORB_PRIVATE_KEY=9kRTh70Ut0MKPeHY3Gdv/pi8SACx6dFjaEiIHf7JDugPpXBnCHVvRbgdzYbWfCGsXdvh/Zct+AldKG4bExjHXg
      - ORB_KEY_ID=orb2key
      # ORB_EXTERNAL_ENDPOINT is the endpoint that external clients use to invoke services. This endpoint is used
      # to generate IDs of anchor credentials and ActivityPub objects and should be resolvable by external
      # clients. This endpoint does not (typically) target a single node in the cluster but instead, a load
      # balancer servicing multiple nodes.
      - ORB_EXTERNAL_ENDPOINT=http://orb.domain2.com
      - ORB_DISCOVERY_DOMAIN=shared.domain.com
      - DID_NAMESPACE=did:orb
      - ALLOWED_ORIGINS=http://orb.domain1.com/services/orb,http://orb.domain2.com/services/orb,ipns://k51qzi5uqu5dgkmm1afrkmex5mzpu5r774jstpxjmro6mdsaullur27nfxle1q
      # BATCH_WRITER_TIMEOUT is max wait time in-between cutting batches (defined in milliseconds)
      - BATCH_WRITER_TIMEOUT=1000
      - CAS_TYPE=${CAS_TYPE}
      - IPFS_URL=ipfs:5001
      - MQ_URL=amqp://${RABBITMQ_USERNAME}:${RABBITMQ_PASSWORD}@orb.mq.domain2.com:5672/
      # MQ_OP_POOL specifies the number of subscribers that concurrently process messages in the operation queue.
      - MQ_OP_POOL=20
      - CID_VERSION=${CID_VERSION_DOMAIN2}
      - ANCHOR_CREDENTIAL_ISSUER=http://orb.domain2.com
      - ANCHOR_CREDENTIAL_URL=http://orb.domain2.com/vc
      - ANCHOR_CREDENTIAL_SIGNATURE_SUITE=Ed25519Signature2018
      # used in case that orb server signs anchor credential (there is no local witness log)
      - ANCHOR_CREDENTIAL_DOMAIN=http://orb.domain2.com
      - DATABASE_TYPE=couchdb
      - DATABASE_URL=${COUCHDB_USERNAME}:${COUCHDB_PASSWORD}@couchdb.shared.com:5984
      - DATABASE_PREFIX=domain2
      - HTTP_SIGNATURES_ENABLED=true

      # ORB_AUTH_TOKENS_DEF contains the authorization definition for each of the REST endpoints. Format:
      #
      # <path-expr>|<read-token1>&<read-token2>&...>|<write-token1>&<write-token2>&...>,<path-expr> ...
      #
      # Where:
      # - path-expr contains a regular expression for a path. Path expressions are processed in the order they are specified.
      # - read-token defines a token for a read (GET) operation. If not specified then authorization is not performed.
      # - write-token defines a token for a write (POST) operation. If not specified then authorization is not performed.
      #
      # If no definition is included for an endpoint then authorization is NOT performed for that endpoint.
      #
      # Example:
      #
      # ORB_AUTH_TOKENS_DEF=/services/orb/outbox|admin&read|admin,/services/orb/.*|read&admin
      # - The client requires a 'read' or 'admin' token in order to view the outbox's contents
      # - The client requires an 'admin' token in order to post to the outbox
      # - The client requires a 'read' or 'admin' token in order to perform a GET on any endpoint starting with /services/orb/
      - ORB_AUTH_TOKENS_DEF=/services/orb/keys,/services/orb/outbox|admin&read|admin,/services/orb/inbox|admin&read|admin,/services/orb/.*|read&admin,/transactions|read&admin,/sidetree/.*/identifiers|read&admin,/sidetree/.*/operations|read&admin|admin,/cas|read&admin
      # ORB_AUTH_TOKENS specifies the actual values of the tokens defined in ORB_AUTH_TOKENS_DEF.
      - ORB_AUTH_TOKENS=admin=ADMIN_TOKEN,read=READ_TOKEN
    ports:
      - 48426:80
    command: start
    volumes:
      - ./keys/tls:/etc/orb/tls
      - ./testdata/keys/domain2:/etc/orb/activitypub
    depends_on:
      - ipfs
      - orb.kms
      - couchdb.kms.com
      - couchdb.shared.com
      - orb.mq.domain2.com
    networks:
      - orb_net

  orb-domain3:
    container_name: orb.domain3.com
    image: ${ORB_FIXTURE_IMAGE}:latest
    restart: always
    environment:
      - DEV_MODE_ENABLED=true
      - ORB_KMS_ENDPOINT=http://orb.kms:7878
      - LOG_LEVEL=DEBUG
      - ORB_PRIVATE_KEY=9kRTh70Ut0MKPeHY3Gdv/pi8SACx6dFjaEiIHf7JDugPpXBnCHVvRbgdzYbWfCGsXdvh/Zct+AldKG4bExjHXg
      - ORB_KEY_ID=orb3key
      - ORB_HOST_URL=0.0.0.0:80
      - ORB_VCT_URL=http://orb.vct:8077/maple2020
      # ORB_EXTERNAL_ENDPOINT is the endpoint that external clients use to invoke services. This endpoint is used
      # to generate IDs of anchor credentials and ActivityPub objects and should be resolvable by external
      # clients. This endpoint does not (typically) target a single node in the cluster but instead, a load
      # balancer servicing multiple nodes.
      - ORB_EXTERNAL_ENDPOINT=http://orb.domain3.com
      - ORB_DISCOVERY_DOMAIN=shared.domain.com
      - DID_NAMESPACE=did:orb
      - ALLOWED_ORIGINS=http://orb.domain1.com/services/orb,http://orb.domain2.com/services/orb,ipns://k51qzi5uqu5dgkmm1afrkmex5mzpu5r774jstpxjmro6mdsaullur27nfxle1q
      # BATCH_WRITER_TIMEOUT is max wait time in-between cutting batches (defined in milliseconds)
      - BATCH_WRITER_TIMEOUT=1000
      - CAS_TYPE=${CAS_TYPE}
      - IPFS_URL=ipfs:5001
      - MQ_URL=amqp://${RABBITMQ_USERNAME}:${RABBITMQ_PASSWORD}@orb.mq.domain3.com:5672/
      # MQ_OP_POOL specifies the number of subscribers that concurrently process messages in the operation queue.
      - MQ_OP_POOL=20
      - CID_VERSION=${CID_VERSION_DOMAIN3}
      - ANCHOR_CREDENTIAL_ISSUER=http://orb.domain3.com
      - ANCHOR_CREDENTIAL_URL=http://orb.domain3.com/vc
      - ANCHOR_CREDENTIAL_SIGNATURE_SUITE=Ed25519Signature2018
      # used in case that orb server signs anchor credential (there is no local witness log)
      - ANCHOR_CREDENTIAL_DOMAIN=http://orb.domain3.com
      - DATABASE_TYPE=couchdb
      - DATABASE_URL=${COUCHDB_USERNAME}:${COUCHDB_PASSWORD}@couchdb.shared.com:5984
      - DATABASE_PREFIX=domain3
      - HTTP_SIGNATURES_ENABLED=true

      # ORB_AUTH_TOKENS_DEF contains the authorization definition for each of the REST endpoints. Format:
      #
      # <path-expr>|<read-token1>&<read-token2>&...>|<write-token1>&<write-token2>&...>,<path-expr> ...
      #
      # Where:
      # - path-expr contains a regular expression for a path. Path expressions are processed in the order they are specified.
      # - read-token defines a token for a read (GET) operation. If not specified then authorization is not performed.
      # - write-token defines a token for a write (POST) operation. If not specified then authorization is not performed.
      #
      # If no definition is included for an endpoint then authorization is NOT performed for that endpoint.
      #
      # Example:
      #
      # ORB_AUTH_TOKENS_DEF=/services/orb/outbox|admin&read|admin,/services/orb/.*|read&admin
      # - The client requires a 'read' or 'admin' token in order to view the outbox's contents
      # - The client requires an 'admin' token in order to post to the outbox
      # - The client requires a 'read' or 'admin' token in order to perform a GET on any endpoint starting with /services/orb/
      - ORB_AUTH_TOKENS_DEF=/services/orb/outbox||admin,/services/orb/inbox||admin,/sidetree/.*/operations||admin
      # ORB_AUTH_TOKENS specifies the actual values of the tokens defined in ORB_AUTH_TOKENS_DEF.
      - ORB_AUTH_TOKENS=admin=ADMIN_TOKEN
    ports:
      - 48626:80
    command: start
    volumes:
      - ./keys/tls:/etc/orb/tls
      - ./testdata/keys/domain3:/etc/orb/activitypub
    depends_on:
      - ipfs
      - orb.kms
      - couchdb.kms.com
      - couchdb.shared.com
      - orb.mq.domain3.com
    networks:
      - orb_net


  orb-domain4:
    container_name: orb.domain4.com
    image: ${ORB_FIXTURE_IMAGE}:latest
    restart: always
    environment:
      - DEV_MODE_ENABLED=true
      - ORB_KMS_ENDPOINT=http://orb.kms:7878
      - LOG_LEVEL=DEBUG
      - ORB_HOST_URL=0.0.0.0:80
      - ORB_PRIVATE_KEY=9kRTh70Ut0MKPeHY3Gdv/pi8SACx6dFjaEiIHf7JDugPpXBnCHVvRbgdzYbWfCGsXdvh/Zct+AldKG4bExjHXg
      - ORB_KEY_ID=orb4key
      # ORB_EXTERNAL_ENDPOINT is the endpoint that external clients use to invoke services. This endpoint is used
      # to generate IDs of anchor credentials and ActivityPub objects and should be resolvable by external
      # clients. This endpoint does not (typically) target a single node in the cluster but instead, a load
      # balancer servicing multiple nodes.
      - ORB_EXTERNAL_ENDPOINT=http://orb.domain4.com
      - DID_NAMESPACE=did:orb
      - DID_DISCOVERY_ENABLED=true
      - ALLOWED_ORIGINS=http://orb.domain4.com/services/orb,http://orb.domain1.com/services/orb,ipns://k51qzi5uqu5dgkmm1afrkmex5mzpu5r774jstpxjmro6mdsaullur27nfxle1q
      # BATCH_WRITER_TIMEOUT is max wait time in-between cutting batches (defined in milliseconds)
      - BATCH_WRITER_TIMEOUT=1000
      - CAS_TYPE=${CAS_TYPE}
      - IPFS_URL=ipfs:5001
      - MQ_URL=amqp://${RABBITMQ_USERNAME}:${RABBITMQ_PASSWORD}@orb.mq.domain4.com:5672/
      # MQ_OP_POOL specifies the number of subscribers that concurrently process messages in the operation queue.
      - MQ_OP_POOL=20
      - CID_VERSION=${CID_VERSION_DOMAIN2}
      - ANCHOR_CREDENTIAL_ISSUER=http://orb.domain4.com
      - ANCHOR_CREDENTIAL_URL=http://orb.domain4.com/vc
      - ANCHOR_CREDENTIAL_SIGNATURE_SUITE=Ed25519Signature2018
      # used in case that orb server signs anchor credential (there is no local witness log)
      - ANCHOR_CREDENTIAL_DOMAIN=http://orb.domain4.com
      - DATABASE_TYPE=couchdb
      - DATABASE_URL=${COUCHDB_USERNAME}:${COUCHDB_PASSWORD}@couchdb.shared.com:5984
      - DATABASE_PREFIX=domain4
      - HTTP_SIGNATURES_ENABLED=true
      - CREATE_DOCUMENT_STORE_ENABLED=true

      # ORB_AUTH_TOKENS_DEF contains the authorization definition for each of the REST endpoints. Format:
      #
      # <path-expr>|<read-token1>&<read-token2>&...>|<write-token1>&<write-token2>&...>,<path-expr> ...
      #
      # Where:
      # - path-expr contains a regular expression for a path. Path expressions are processed in the order they are specified.
      # - read-token defines a token for a read (GET) operation. If not specified then authorization is not performed.
      # - write-token defines a token for a write (POST) operation. If not specified then authorization is not performed.
      #
      # If no definition is included for an endpoint then authorization is NOT performed for that endpoint.
      #
      # Example:
      #
      # ORB_AUTH_TOKENS_DEF=/services/orb/outbox|admin&read|admin,/services/orb/.*|read&admin
      # - The client requires a 'read' or 'admin' token in order to view the outbox's contents
      # - The client requires an 'admin' token in order to post to the outbox
      # - The client requires a 'read' or 'admin' token in order to perform a GET on any endpoint starting with /services/orb/
      - ORB_AUTH_TOKENS_DEF=/services/orb/keys,/services/orb/outbox|admin&read|admin,/services/orb/inbox|admin&read|admin,/services/orb/.*|read&admin,/transactions|read&admin,/sidetree/.*/identifiers|read&admin,/sidetree/.*/operations|read&admin|admin,/cas|read&admin
      # ORB_AUTH_TOKENS specifies the actual values of the tokens defined in ORB_AUTH_TOKENS_DEF.
      - ORB_AUTH_TOKENS=admin=ADMIN_TOKEN,read=READ_TOKEN
    ports:
      - 48726:80
    command: start
    volumes:
      - ./keys/tls:/etc/orb/tls
      - ./testdata/keys/domain2:/etc/orb/activitypub
    depends_on:
      - ipfs
      - orb.kms
      - couchdb.kms.com
      - couchdb.shared.com
      - orb.mq.domain4.com
    networks:
      - orb_net

  ipfs:
    container_name: ipfs
    #TODO: this image doesn't work on ARM64 yet (investigate images)
    image: ipfs/go-ipfs:v0.8.0
    ports:
      - "4001:4001"
      - "4001:4001/udp"
      - "127.0.0.1:8080:8080"
      - "127.0.0.1:5001:5001"
    volumes:
      - ./data/ipfs:/data/ipfs
      - ./export:/export
    networks:
      - orb_net

  couchdb.kms.com:
    container_name: couchdb.kms.com
    image: ${COUCHDB_IMAGE}:${COUCHDB_IMAGE_TAG}
    ports:
      - ${COUCHDB_KMS_PORT}:${COUCHDB_PORT}
    environment:
      - COUCHDB_USER=${COUCHDB_USERNAME}
      - COUCHDB_PASSWORD=${COUCHDB_PASSWORD}
    volumes:
      - ./couchdb-config/config.ini:/opt/couchdb/etc/local.d/config.ini
    networks:
      - orb_net

  couchdb.shared.com:
    container_name: couchdb.shared.com
    image: ${COUCHDB_IMAGE}:${COUCHDB_IMAGE_TAG}
    ports:
      - ${COUCHDB_SHARED_PORT}:${COUCHDB_PORT}
    environment:
      - COUCHDB_USER=${COUCHDB_USERNAME}
      - COUCHDB_PASSWORD=${COUCHDB_PASSWORD}
    volumes:
      - ./couchdb-config/config.ini:/opt/couchdb/etc/local.d/config.ini
    networks:
      - orb_net

  orb.postgres:
    container_name: orb.postgres
    image: postgres:13
    restart: always
    volumes:
      - ./postgres-config/postgres_config.sql:/docker-entrypoint-initdb.d/postgres_config.sql
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=test
    ports:
      - 5432:5432
    networks:
      - orb_net

  orb.trillian.log.server:
    container_name: orb.trillian.log.server
    image: ghcr.io/trustbloc-cicd/vct-log-server:v0.1.0-snapshot-ff750b2
    restart: always
    command:
      - --quota_system=noop
      - --storage_system=postgres
      - --pg_conn_str=user=postgres host=orb.postgres password=password dbname=test port=5432 sslmode=disable
      - --rpc_endpoint=0.0.0.0:8090
      - --logtostderr
    depends_on:
      - orb.postgres
    networks:
      - orb_net
    ports:
      - 8090:8090

  orb.trillian.log.signer:
    container_name: orb.trillian.log.signer
    image: ghcr.io/trustbloc-cicd/vct-log-signer:v0.1.0-snapshot-ff750b2
    restart: always
    command:
      - --quota_system=noop
      - --storage_system=postgres
      - --pg_conn_str=user=postgres host=orb.postgres password=password dbname=test port=5432 sslmode=disable
      - --http_endpoint=0.0.0.0:8091
      - --force_master=true
      - --logtostderr
    depends_on:
      - orb.postgres
    networks:
      - orb_net
    ports:
      - 8091:8091

  orb.kms:
    container_name: orb.kms
    restart: always
    image: ghcr.io/trustbloc-cicd/kms:0.1.7-snapshot-bff24d1
    environment:
      - KMS_BASE_URL=http://orb.kms:7878
      - KMS_HOST_URL=0.0.0.0:7878
      - KMS_DATABASE_TYPE=couchdb
      - KMS_DATABASE_URL=${COUCHDB_USERNAME}:${COUCHDB_PASSWORD}@couchdb.kms.com:5984
      - KMS_DATABASE_PREFIX=keystore
      - KMS_PRIMARY_KEY_DATABASE_TYPE=couchdb
      - KMS_PRIMARY_KEY_DATABASE_URL=${COUCHDB_USERNAME}:${COUCHDB_PASSWORD}@couchdb.kms.com:5984
      - KMS_PRIMARY_KEY_DATABASE_PREFIX=kmspk
      - KMS_LOCAL_KMS_DATABASE_TYPE=couchdb
      - KMS_LOCAL_KMS_DATABASE_URL=${COUCHDB_USERNAME}:${COUCHDB_PASSWORD}@couchdb.kms.com:5984
      - KMS_LOCAL_KMS_DATABASE_PREFIX=kmslocal
      - KMS_KEY_MANAGER_STORAGE_TYPE=couchdb
      - KMS_KEY_MANAGER_STORAGE_URL=${COUCHDB_USERNAME}:${COUCHDB_PASSWORD}@couchdb.kms.com:5984
      - KMS_KEY_MANAGER_STORAGE_PREFIX=kmskm
      - KMS_LOG_LEVEL=debug
    ports:
      - 7878:7878
    entrypoint: ""
    depends_on:
      - couchdb.kms.com
    command: /bin/sh -c "kms-rest start"
    networks:
      - orb_net

  orb.vct:
    container_name: orb.vct
    image: ghcr.io/trustbloc-cicd/vct:v0.1.0-snapshot-ff750b2
    restart: always
    environment:
      - VCT_API_HOST=0.0.0.0:8077
      - VCT_LOGS=maple2020:rw@orb.trillian.log.server:8090
      - VCT_KMS_ENDPOINT=http://orb.kms:7878
      - VCT_TLS_SYSTEMCERTPOOL=true
      - VCT_DSN=couchdb://${COUCHDB_USERNAME}:${COUCHDB_PASSWORD}@couchdb.kms.com:5984
      - VCT_DATABASE_PREFIX=vct-db
      - VCT_TLS_CACERTS=/etc/orb/tls/ec-cacert.pem
      - VCT_DEV_MODE=true
    volumes:
      - ./keys/tls:/etc/orb/tls
    ports:
      - 8077:8077
    command: start
    networks:
      - orb_net

  orb.driver:
    container_name: orb.driver
    image: ghcr.io/trustbloc/orb-did-driver:latest
    environment:
      - ORB_DRIVER_HOST_URL=0.0.0.0:8070
      - ORB_DRIVER_DOMAIN=http://orb.domain1.com
      - ORB_DRIVER_TLS_SYSTEMCERTPOOL=true
      - ORB_DRIVER_TLS_CACERTS=/etc/orb/tls/ec-cacert.pem
      - ORB_DRIVER_SIDETREE_TOKEN=READ_TOKEN
    volumes:
      - ./keys/tls:/etc/orb/tls
    ports:
      - 8070:8070
    command: start
    networks:
      - orb_net

  uni-resolver-web:
    image: universalresolver/uni-resolver-web:0.3.0
    ports:
      - "8062:8080"
    volumes:
      - ./uni-resolver-web/config.json:/opt/uni-resolver-java/uni-resolver-web/config.json
    networks:
      - orb_net

  orb.mq.domain1.com:
    container_name: orb.mq.domain1.com
    image: rabbitmq:3-management-alpine
    environment:
      - CONFIG_FILE=/etc/rabbitmq/ext-config/rabbitmq.conf
    volumes:
      - ./rabbitmq-config/rabbitmq.conf:/etc/rabbitmq/ext-config/rabbitmq.conf
    ports:
      - 5672:5672
      # Management port
      - 15672:15672
    restart: unless-stopped
    networks:
      - orb_net

  orb.mq.domain2.com:
    container_name: orb.mq.domain2.com
    image: rabbitmq:3-management-alpine
    environment:
      - CONFIG_FILE=/etc/rabbitmq/ext-config/rabbitmq.conf
    volumes:
      - ./rabbitmq-config/rabbitmq.conf:/etc/rabbitmq/ext-config/rabbitmq.conf
    ports:
      - 5682:5672
      # Management port
      - 15682:15672
    restart: unless-stopped
    networks:
      - orb_net

  orb.mq.domain3.com:
    container_name: orb.mq.domain3.com
    image: rabbitmq:3-management-alpine
    environment:
      - CONFIG_FILE=/etc/rabbitmq/ext-config/rabbitmq.conf
    volumes:
      - ./rabbitmq-config/rabbitmq.conf:/etc/rabbitmq/ext-config/rabbitmq.conf
    ports:
      - 5692:5672
      # Management port
      - 15692:15672
    restart: unless-stopped
    networks:
      - orb_net

  orb.mq.domain4.com:
    container_name: orb.mq.domain4.com
    image: rabbitmq:3-management-alpine
    environment:
      - CONFIG_FILE=/etc/rabbitmq/ext-config/rabbitmq.conf
    volumes:
      - ./rabbitmq-config/rabbitmq.conf:/etc/rabbitmq/ext-config/rabbitmq.conf
    ports:
      - 5694:5672
      # Management port
      - 15694:15672
    restart: unless-stopped
    networks:
      - orb_net

networks:
  orb_net:
    driver: bridge
